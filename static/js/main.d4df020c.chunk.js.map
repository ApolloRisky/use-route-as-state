{"version":3,"sources":["CreateLinkWithState.jsx","../../src/index.ts","SearchList.jsx","UseQueryParam.jsx","UseRouteParam.jsx","App.jsx","webpack:///./src/UseQueryParam.jsx?69c2","webpack:///./src/UseRouteParam.jsx?5df6","webpack:///./src/CreateLinkWithState.jsx?4abf","index.js"],"names":["CreateLinkWithState","useState","rParam","setRouteParam","qParam","setQueryParam","rp","qs","undefined","to","Box","display","flexDirection","TextField","label","value","onChange","target","Typography","variant","params","history","options","s","search","filter","n","toLowerCase","includes","subOptions","map","UseQueryParam","useQueryAsState","updateParams","id","e","SearchList","UseRouteParam","useParamsAsState","path","useRouteMatch","component","Example","title","caption","description","code","children","Card","style","margin","CardContent","color","CardMedia","language","Examples","justifyContent","flexWrap","App","basename","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d4df020c.chunk.js","sourcesContent":["import { Box, TextField, Typography } from '@material-ui/core'\nimport React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\n\nconst CreateLinkWithState = () => {\n    const [rParam, setRouteParam] = useState()\n    const [qParam, setQueryParam] = useState()\n\n    const rp = rParam || ''\n    const qs = qParam !== undefined && qParam !== null ? `?qParam=${qParam}` : ''\n    const to = `/${rp}${qs}`\n\n    return <Box display='flex' flexDirection='column'>\n        <TextField label='Insert value for the Route Param'\n            value={rParam}\n            onChange={({ target }) => setRouteParam(target.value)} />\n        <TextField label='Insert value for the Query Param'\n            value={qParam}\n            onChange={({ target }) => setQueryParam(target.value)} />\n        <Typography variant='body2'>Use link to <Link to={to}>{to}</Link></Typography>\n    </Box>\n}\n\nexport default CreateLinkWithState","import { useState, useEffect } from 'react';\nimport { useLocation, useHistory, useRouteMatch, generatePath } from 'react-router-dom';\n\nvar getQueryParamsAsObject = function (search) {\n    var params = {};\n    new URLSearchParams(search).forEach(function (value, key) { return params[key] = value; });\n    return params;\n};\nvar objectToQueryParams = function (obj) { return '?' + Object.keys(obj)\n    .filter(function (key) { return obj[key] !== undefined; })\n    .map(function (key) { return key + \"=\" + obj[key]; })\n    .join('&'); };\nvar useQueryAsState = function () {\n    var _a = useLocation(), pathname = _a.pathname, search = _a.search;\n    var history = useHistory();\n    var _b = useState({}), params = _b[0], setParams = _b[1];\n    useEffect(function () { return setParams(getQueryParamsAsObject(search)); }, [search]);\n    var updateQuery = function (updatedParams) {\n        Object.assign(params, updatedParams);\n        history.replace(pathname + objectToQueryParams(params));\n    };\n    return [params, updateQuery];\n};\nvar useParamsAsState = function () {\n    var _a = useRouteMatch(), path = _a.path, params = _a.params;\n    var history = useHistory();\n    var updateParams = function (updatedParams) {\n        Object.assign(params, updatedParams);\n        history.push(generatePath(path, params));\n    };\n    return [params, updateParams];\n};\n\nexport { useParamsAsState, useQueryAsState };\n//# sourceMappingURL=index.es.js.map\n","import React from 'react'\n\nconst options = ['Emma', 'Noah', 'Olivia', 'Liam', 'Ava', 'William']\nconst subOptions = (search = '') => options.filter((n) =>\n    n.toLowerCase().includes(search.toLowerCase()))\n\nexport default ({ search }) => {\n    const s = search || ''\n\n    return <ul>\n        {subOptions(s).map((n) => <li>{n}</li>)}\n    </ul>\n}\n","import { Box, TextField, Typography } from '@material-ui/core'\nimport React from 'react'\nimport { useQueryAsState } from 'use-route-as-state'\nimport SearchList from './SearchList'\n\nconst UseQueryParam = () => {\n    const [params, updateParams] = useQueryAsState()\n\n    const onChange = (e) => updateParams({ [e.target.id]: e.target.value })\n\n    return <Box display='flex' flexDirection='column'>\n        <TextField id='qParam' label={`Insert value for 'qParam'`}\n            value={params.qParam} onChange={onChange} />\n        <Typography variant='body2'><SearchList search={params.qParam} /></Typography>\n    </Box>\n}\n\nexport default UseQueryParam\n","import { Box, TextField, Typography } from '@material-ui/core'\nimport React from 'react'\nimport { Route, Switch, useRouteMatch } from 'react-router-dom'\nimport { useParamsAsState } from 'use-route-as-state'\n\n\nconst UseRouteParam = () => {\n    const [params, updateParams] = useParamsAsState()\n\n    const onChange = (e) => updateParams({ [e.target.id]: e.target.value || undefined })\n\n    return <Box display='flex' flexDirection='column'>\n        <TextField id='rParam' label={`Insert value for 'rParam'`}\n            value={params.rParam} onChange={onChange} />\n        <Typography variant='body2'>{params.rParam}</Typography>\n    </Box>\n}\n\nexport default () => {\n    const { path } = useRouteMatch()\n\n    return <Switch>\n        <Route path={`${path}:rParam?`} component={UseRouteParam} />\n    </Switch>\n}\n","/* eslint-disable import/no-webpack-loader-syntax */\nimport CreateLinkWithStateCode from '!!raw-loader!./CreateLinkWithState'\nimport UseQueryParamCode from '!!raw-loader!./UseQueryParam'\nimport UseRouteParamCode from '!!raw-loader!./UseRouteParam'\nimport { Box, Card, CardContent, CardMedia, Typography } from '@material-ui/core'\nimport React from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport SyntaxHighlighter from 'react-syntax-highlighter'\nimport CreateLinkWithState from './CreateLinkWithState'\nimport UseQueryParam from './UseQueryParam'\nimport UseRouteParam from './UseRouteParam'\n\nconst Example = ({ title, caption, description, code, children }) => {\n  return <Card style={{ margin: 5 }}>\n    <CardContent>\n      <Typography variant='h4'>{title}</Typography>\n      <Typography variant='subtitle1'>{description}</Typography>\n      {caption && <Typography color='error' variant='caption'>{caption}</Typography>}\n      {children}\n    </CardContent>\n    <CardMedia>\n      {code && <SyntaxHighlighter language=\"javascript\">{code}</SyntaxHighlighter>}\n    </CardMedia>\n  </Card>\n}\n\nconst Examples = () => {\n\n  return <Box display='flex' justifyContent='space-evenly' flexWrap=\"wrap\">\n    <Example title='Use Query Params'\n      description='You will see how the state changes simultaneously in both the label below and the address bar'\n      code={UseQueryParamCode}>\n      <UseQueryParam />\n    </Example>\n    <Example title='Use Route Params'\n      description='You will see how the state changes simultaneously in both the label below and the address bar'\n      caption={<>This is just for example. I don't recommend using a TextField for updating Route Params.<br />\n        You may want to use DropDown or something.</>}\n      code={UseRouteParamCode}>\n      <UseRouteParam />\n    </Example>\n    <Example title='Try Links'\n      description='Create URL here to see how it affect other components'\n      code={CreateLinkWithStateCode}>\n      <CreateLinkWithState />\n    </Example>\n  </Box>\n}\n\nconst App = () => {\n\n  return (\n    <BrowserRouter basename='/use-route-as-state/'>\n      <Switch>\n        <Route path='/' component={Examples} />\n      </Switch>\n    </BrowserRouter>\n  )\n}\nexport default App\n","export default \"import { Box, TextField, Typography } from '@material-ui/core'\\nimport React from 'react'\\nimport { useQueryAsState } from 'use-route-as-state'\\nimport SearchList from './SearchList'\\n\\nconst UseQueryParam = () => {\\n    const [params, updateParams] = useQueryAsState()\\n\\n    const onChange = (e) => updateParams({ [e.target.id]: e.target.value })\\n\\n    return <Box display='flex' flexDirection='column'>\\n        <TextField id='qParam' label={`Insert value for 'qParam'`}\\n            value={params.qParam} onChange={onChange} />\\n        <Typography variant='body2'><SearchList search={params.qParam} /></Typography>\\n    </Box>\\n}\\n\\nexport default UseQueryParam\\n\";","export default \"import { Box, TextField, Typography } from '@material-ui/core'\\nimport React from 'react'\\nimport { Route, Switch, useRouteMatch } from 'react-router-dom'\\nimport { useParamsAsState } from 'use-route-as-state'\\n\\n\\nconst UseRouteParam = () => {\\n    const [params, updateParams] = useParamsAsState()\\n\\n    const onChange = (e) => updateParams({ [e.target.id]: e.target.value || undefined })\\n\\n    return <Box display='flex' flexDirection='column'>\\n        <TextField id='rParam' label={`Insert value for 'rParam'`}\\n            value={params.rParam} onChange={onChange} />\\n        <Typography variant='body2'>{params.rParam}</Typography>\\n    </Box>\\n}\\n\\nexport default () => {\\n    const { path } = useRouteMatch()\\n\\n    return <Switch>\\n        <Route path={`${path}:rParam?`} component={UseRouteParam} />\\n    </Switch>\\n}\\n\";","export default \"import { Box, TextField, Typography } from '@material-ui/core'\\nimport React, { useState } from 'react'\\nimport { Link } from 'react-router-dom'\\n\\nconst CreateLinkWithState = () => {\\n    const [rParam, setRouteParam] = useState()\\n    const [qParam, setQueryParam] = useState()\\n\\n    const rp = rParam || ''\\n    const qs = qParam !== undefined && qParam !== null ? `?qParam=${qParam}` : ''\\n    const to = `/${rp}${qs}`\\n\\n    return <Box display='flex' flexDirection='column'>\\n        <TextField label='Insert value for the Route Param'\\n            value={rParam}\\n            onChange={({ target }) => setRouteParam(target.value)} />\\n        <TextField label='Insert value for the Query Param'\\n            value={qParam}\\n            onChange={({ target }) => setQueryParam(target.value)} />\\n        <Typography variant='body2'>Use link to <Link to={to}>{to}</Link></Typography>\\n    </Box>\\n}\\n\\nexport default CreateLinkWithState\";","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}