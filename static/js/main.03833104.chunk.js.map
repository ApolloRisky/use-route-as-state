{"version":3,"sources":["../../src/index.ts","UseQueryParam.jsx","UseRouteParam.jsx","App.jsx","webpack:///./src/UseQueryParam.jsx?69c2","webpack:///./src/UseRouteParam.jsx?5df6","index.js"],"names":["params","history","UseQueryParam","useQueryAsState","updateParams","Box","display","flexDirection","TextField","id","value","foo","label","onChange","e","target","Typography","variant","UseRouteParam","useParamsAsState","bar","undefined","path","useRouteMatch","component","Example","title","description","code","children","Card","style","margin","CardContent","CardMedia","language","Examples","justifyContent","flexWrap","App","basename","ReactDOM","render","document","getElementById"],"mappings":"yRAgBa,EAAkB,WACrB,MAAuB,cAArB,EAAQ,WAAE,EAAM,SAClB,EAAU,cACV,EAAsB,mBAAS,IAA9B,EAAM,KAAE,EAAS,KAExB,qBAAU,WAAM,SAlBW,SAAC,GAC5B,IAAIA,EAAS,GAIb,OAFA,IAAI,gBAAgB,GAAQ,SAAQ,SAAC,EAAO,GAAQ,SAAO,GAAO,KAE3D,EAamB,CAAuB,MAAU,CAAC,IAO1D,MAAK,CAAC,EALY,SAAC,GAZG,IAAC,EAarB,OAAO,OAAO,EAAQ,GACtBC,EAAQ,QAAQ,GAdK,EAc0B,EAdM,IAAM,OAAO,KAAK,GAC1E,QAAO,SAAC,GAAQ,YAAa,IAAb,EAAI,MACpB,KAAI,SAAC,GAAQ,OAAG,EAAG,IAAI,EAAI,MAC3B,KAAK,UCCKC,EAXO,WAAO,IAAD,EACOC,IADP,mBACjBH,EADiB,KACTI,EADS,KAKxB,OAAO,kBAACC,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,UACrC,kBAACC,EAAA,EAAD,CAAWC,GAAG,MAAMC,MAAOV,EAAOW,IAAKC,MAAK,yBAA4BC,SAH3D,SAACC,GAAD,OAAOV,EAAa,CAAE,CAACU,EAAEC,OAAON,IAAKK,EAAEC,OAAOL,WAI3D,kBAACM,EAAA,EAAD,CAAYC,QAAQ,SAASjB,EAAOW,OCLtCO,EAAgB,WAAO,IAAD,EFyBI,WACtB,MAAmB,cAAjB,EAAI,OAAE,EAAM,SACd,EAAU,cAMhB,MAAO,CAAC,EAJa,SAAC,GAClB,OAAO,OAAO,EAAQ,GACtB,EAAQ,KAAK,YAAa,EAAM,ME9BLC,GADP,mBACjBnB,EADiB,KACTI,EADS,KAKxB,OAAO,kBAACC,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,UACrC,kBAACC,EAAA,EAAD,CAAWC,GAAG,MAAMC,MAAOV,EAAOoB,IAAKR,MAAK,yBAA4BC,SAH3D,SAACC,GAAD,OAAOV,EAAa,CAAE,CAACU,EAAEC,OAAON,IAAKK,EAAEC,OAAOL,YAASW,OAIpE,kBAACL,EAAA,EAAD,CAAYC,QAAQ,SAASjB,EAAOoB,OAI7B,aAAO,IACVE,EAASC,cAATD,KAER,OAAO,kBAAC,IAAD,KACH,kBAAC,IAAD,CAAOA,KAAI,UAAKA,EAAL,SAAkBE,UAAWN,MCX1CO,EAAU,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC3C,OAAO,kBAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,OAAQ,IAC5B,kBAACC,EAAA,EAAD,KACE,kBAACjB,EAAA,EAAD,CAAYC,QAAQ,MAAMS,GAC1B,kBAACV,EAAA,EAAD,CAAYC,QAAQ,aAAaU,GAChCE,GAEH,kBAACK,EAAA,EAAD,KACGN,GAAQ,kBAAC,IAAD,CAAmBO,SAAS,cAAcP,MAKnDQ,EAAW,WAEf,OAAO,kBAAC/B,EAAA,EAAD,CAAKC,QAAQ,OAAO+B,eAAe,eAAeC,SAAS,QAChE,kBAAC,EAAD,CAASZ,MAAM,mBACbC,YAAY,gGACZC,KC5BS,2kBD6BT,kBAAC,EAAD,OAEF,kBAAC,EAAD,CAASF,MAAM,mBACbC,YAAY,gGACZC,KEjCS,yyBFkCT,kBAAC,EAAD,OAEF,kBAAC,EAAD,CAASF,MAAM,QACbC,YAAY,wDACZC,KAAK,WAcIW,EAVH,WAEV,OACE,kBAAC,IAAD,CAAeC,SAAS,wBACtB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOlB,KAAK,IAAIE,UAAWY,OGzCnCK,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.03833104.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useLocation, useHistory, useRouteMatch, generatePath } from 'react-router-dom';\n\nvar getQueryParamsAsObject = function (search) {\n    var params = {};\n    new URLSearchParams(search).forEach(function (value, key) { return params[key] = value; });\n    return params;\n};\nvar objectToQueryParams = function (obj) { return '?' + Object.keys(obj)\n    .filter(function (key) { return obj[key] !== undefined; })\n    .map(function (key) { return key + \"=\" + obj[key]; })\n    .join('&'); };\nvar useQueryAsState = function () {\n    var _a = useLocation(), pathname = _a.pathname, search = _a.search;\n    var history = useHistory();\n    var _b = useState({}), params = _b[0], setParams = _b[1];\n    useEffect(function () { return setParams(getQueryParamsAsObject(search)); }, [search]);\n    var updateQuery = function (updatedParams) {\n        Object.assign(params, updatedParams);\n        history.replace(pathname + objectToQueryParams(params));\n    };\n    return [params, updateQuery];\n};\nvar useParamsAsState = function () {\n    var _a = useRouteMatch(), path = _a.path, params = _a.params;\n    var history = useHistory();\n    var updateParams = function (updatedParams) {\n        Object.assign(params, updatedParams);\n        history.push(generatePath(path, params));\n    };\n    return [params, updateParams];\n};\n\nexport { useParamsAsState, useQueryAsState };\n//# sourceMappingURL=index.es.js.map\n","import { Box, TextField, Typography } from '@material-ui/core'\nimport React from 'react'\nimport { useQueryAsState } from 'use-route-as-state'\n\nconst UseQueryParam = () => {\n    const [params, updateParams] = useQueryAsState()\n\n    const onChange = (e) => updateParams({ [e.target.id]: e.target.value })\n\n    return <Box display='flex' flexDirection='column'>\n        <TextField id='foo' value={params.foo} label={`Insert value for 'foo'`} onChange={onChange} />\n        <Typography variant='body2'>{params.foo}</Typography>\n    </Box>\n}\n\nexport default UseQueryParam\n","import { Box, TextField, Typography } from '@material-ui/core'\nimport React from 'react'\nimport { Route, Switch, useRouteMatch } from 'react-router-dom'\nimport { useParamsAsState } from 'use-route-as-state'\n\n\nconst UseRouteParam = () => {\n    const [params, updateParams] = useParamsAsState()\n\n    const onChange = (e) => updateParams({ [e.target.id]: e.target.value || undefined })\n\n    return <Box display='flex' flexDirection='column'>\n        <TextField id='bar' value={params.bar} label={`Insert value for 'bar'`} onChange={onChange} />\n        <Typography variant='body2'>{params.bar}</Typography>\n    </Box>\n}\n\nexport default () => {\n    const { path } = useRouteMatch()\n\n    return <Switch>\n        <Route path={`${path}:bar?`} component={UseRouteParam} />\n    </Switch>\n}\n","/* eslint-disable import/no-webpack-loader-syntax */\nimport UseQueryParamCode from '!!raw-loader!./UseQueryParam'\nimport UseRouteParamCode from '!!raw-loader!./UseRouteParam'\nimport { Box, Card, CardContent, CardMedia, Typography } from '@material-ui/core'\nimport React from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport SyntaxHighlighter from 'react-syntax-highlighter'\nimport UseQueryParam from './UseQueryParam'\nimport UseRouteParam from './UseRouteParam'\n\nconst Example = ({ title, description, code, children }) => {\n  return <Card style={{ margin: 5 }}>\n    <CardContent>\n      <Typography variant='h4'>{title}</Typography>\n      <Typography variant='subtitle1'>{description}</Typography>\n      {children}\n    </CardContent>\n    <CardMedia>\n      {code && <SyntaxHighlighter language=\"javascript\">{code}</SyntaxHighlighter>}\n    </CardMedia>\n  </Card>\n}\n\nconst Examples = () => {\n\n  return <Box display='flex' justifyContent='space-evenly' flexWrap=\"wrap\">\n    <Example title='Use Query Params'\n      description='You will see how the state changes simultaneously in both the label below and the address bar'\n      code={UseQueryParamCode}>\n      <UseQueryParam />\n    </Example>\n    <Example title='Use Route Params'\n      description='You will see how the state changes simultaneously in both the label below and the address bar'\n      code={UseRouteParamCode}>\n      <UseRouteParam />\n    </Example>\n    <Example title='Links'\n      description='Create URL here to see how it affect other components'\n      code='TODO' />\n  </Box>\n}\n\nconst App = () => {\n\n  return (\n    <BrowserRouter basename='/use-route-as-state/'>\n      <Switch>\n        <Route path='/' component={Examples} />\n      </Switch>\n    </BrowserRouter>\n  )\n}\nexport default App\n","export default \"import { Box, TextField, Typography } from '@material-ui/core'\\nimport React from 'react'\\nimport { useQueryAsState } from 'use-route-as-state'\\n\\nconst UseQueryParam = () => {\\n    const [params, updateParams] = useQueryAsState()\\n\\n    const onChange = (e) => updateParams({ [e.target.id]: e.target.value })\\n\\n    return <Box display='flex' flexDirection='column'>\\n        <TextField id='foo' value={params.foo} label={`Insert value for 'foo'`} onChange={onChange} />\\n        <Typography variant='body2'>{params.foo}</Typography>\\n    </Box>\\n}\\n\\nexport default UseQueryParam\\n\";","export default \"import { Box, TextField, Typography } from '@material-ui/core'\\nimport React from 'react'\\nimport { Route, Switch, useRouteMatch } from 'react-router-dom'\\nimport { useParamsAsState } from 'use-route-as-state'\\n\\n\\nconst UseRouteParam = () => {\\n    const [params, updateParams] = useParamsAsState()\\n\\n    const onChange = (e) => updateParams({ [e.target.id]: e.target.value || undefined })\\n\\n    return <Box display='flex' flexDirection='column'>\\n        <TextField id='bar' value={params.bar} label={`Insert value for 'bar'`} onChange={onChange} />\\n        <Typography variant='body2'>{params.bar}</Typography>\\n    </Box>\\n}\\n\\nexport default () => {\\n    const { path } = useRouteMatch()\\n\\n    return <Switch>\\n        <Route path={`${path}:bar?`} component={UseRouteParam} />\\n    </Switch>\\n}\\n\";","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}