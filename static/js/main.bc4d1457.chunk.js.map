{"version":3,"sources":["../../src/index.ts","UseQueryParam.jsx","UseRouteParam.jsx","App.jsx","webpack:///./src/UseQueryParam.jsx?69c2","webpack:///./src/UseRouteParam.jsx?5df6","index.js"],"names":["params","history","UseQueryParam","useQueryAsState","updateParams","Box","display","flexDirection","TextField","id","value","foo","label","onChange","e","target","Typography","variant","UseRouteParam","useParamsAsState","useLocation","pathname","bar","undefined","path","useRouteMatch","component","Example","title","description","code","children","Card","style","margin","CardContent","CardMedia","language","Examples","justifyContent","flexWrap","App","render","to","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.bc4d1457.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useLocation, useHistory, useRouteMatch, generatePath } from 'react-router-dom';\n\nvar getQueryParamsAsObject = function (search) {\r\n    var params = {};\r\n    new URLSearchParams(search).forEach(function (value, key) { return params[key] = value; });\r\n    return params;\r\n};\r\nvar objectToQueryParams = function (obj) { return '?' + Object.keys(obj)\r\n    .filter(function (key) { return obj[key] !== undefined; })\r\n    .map(function (key) { return key + \"=\" + obj[key]; })\r\n    .join('&'); };\r\nvar useQueryAsState = function () {\r\n    var _a = useLocation(), pathname = _a.pathname, search = _a.search;\r\n    var history = useHistory();\r\n    var _b = useState({}), params = _b[0], setParams = _b[1];\r\n    useEffect(function () { return setParams(getQueryParamsAsObject(search)); }, [search]);\r\n    var updateQuery = function (updatedParams) {\r\n        Object.assign(params, updatedParams);\r\n        history.replace(pathname + objectToQueryParams(params));\r\n    };\r\n    return [params, updateQuery];\r\n};\r\nvar useParamsAsState = function () {\r\n    var _a = useRouteMatch(), path = _a.path, params = _a.params;\r\n    var history = useHistory();\r\n    var updateParams = function (updatedParams) {\r\n        Object.assign(params, updatedParams);\r\n        history.push(generatePath(path, params));\r\n    };\r\n    return [params, updateParams];\r\n};\n\nexport { useParamsAsState, useQueryAsState };\n//# sourceMappingURL=index.es.js.map\n","import { Box, TextField, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { useQueryAsState } from 'use-route-as-state'\r\n\r\nconst UseQueryParam = () => {\r\n    const [params, updateParams] = useQueryAsState()\r\n\r\n    const onChange = (e) => updateParams({ [e.target.id]: e.target.value })\r\n\r\n    return <Box display='flex' flexDirection='column'>\r\n        <TextField id='foo' value={params.foo} label={`Insert value for 'foo'`} onChange={onChange} />\r\n        <Typography variant='body2'>{params.foo}</Typography>\r\n    </Box>\r\n}\r\n\r\nexport default UseQueryParam\r\n","import { Box, TextField, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { Route, Switch, useLocation, useRouteMatch } from 'react-router-dom'\r\nimport { useParamsAsState } from 'use-route-as-state'\r\n\r\n\r\nconst UseRouteParam = () => {\r\n    const [params, updateParams] = useParamsAsState()\r\n    const { pathname } = useLocation()\r\n\r\n    const onChange = (e) => updateParams({ [e.target.id]: e.target.value || undefined })\r\n\r\n    return <Box display='flex' flexDirection='column'>\r\n        <TextField id='bar' value={params.bar} label={`Insert value for 'bar'`} onChange={onChange} />\r\n        <Typography variant='body2'>{params.bar}</Typography>\r\n    </Box>\r\n}\r\n\r\nexport default () => {\r\n    const { path } = useRouteMatch()\r\n\r\n    return <Switch>\r\n        <Route path={`${path}/:bar?`} component={UseRouteParam} />\r\n    </Switch>\r\n}\r\n","/* eslint-disable import/no-webpack-loader-syntax */\r\nimport UseQueryParamCode from '!!raw-loader!./UseQueryParam'\r\nimport UseRouteParamCode from '!!raw-loader!./UseRouteParam'\r\nimport { Box, Card, CardContent, CardMedia, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { BrowserRouter, Link, Route, Switch } from 'react-router-dom'\r\nimport SyntaxHighlighter from 'react-syntax-highlighter'\r\nimport UseQueryParam from './UseQueryParam'\r\nimport UseRouteParam from './UseRouteParam'\r\n\r\nconst Example = ({ title, description, code, children }) => {\r\n  return <Card style={{margin: 5}}>\r\n    <CardContent>\r\n      <Typography variant='h4'>{title}</Typography>\r\n      <Typography variant='subtitle1'>{description}</Typography>\r\n      {children}\r\n      <div>Also use links</div>\r\n    </CardContent>\r\n    <CardMedia>\r\n      <SyntaxHighlighter language=\"javascript\">{code}</SyntaxHighlighter>\r\n    </CardMedia>\r\n  </Card>\r\n  // return <Box display='flex' flexDirection='column'>\r\n  //   <Typography variant='h4'>{title}</Typography>\r\n  //   <Typography variant='subtitle1'>{description}</Typography>\r\n  //   {children}\r\n  //   <SyntaxHighlighter language=\"javascript\">{code}</SyntaxHighlighter>\r\n  // </Box>\r\n}\r\n\r\nconst Examples = () => {\r\n\r\n  return <Box display='flex' justifyContent='space-evenly' flexWrap=\"wrap\">\r\n    <Example title='Use Query Params'\r\n      description='You will see how the state changes simultaneously in both the label below and the address bar'\r\n      code={UseQueryParamCode}>\r\n      <UseQueryParam />\r\n    </Example>\r\n    <Example title='Use Route Params'\r\n      description='You will see how the state changes simultaneously in both the label below and the address bar'\r\n      code={UseRouteParamCode}>\r\n      <UseRouteParam />\r\n    </Example>\r\n  </Box>\r\n}\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path='/example' component={Examples} />\r\n        <Route path='/' render={() => <Link to={'/example'}>Show Example</Link>} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  )\r\n}\r\nexport default App\r\n","export default \"import { Box, TextField, Typography } from '@material-ui/core'\\r\\nimport React from 'react'\\r\\nimport { useQueryAsState } from 'use-route-as-state'\\r\\n\\r\\nconst UseQueryParam = () => {\\r\\n    const [params, updateParams] = useQueryAsState()\\r\\n\\r\\n    const onChange = (e) => updateParams({ [e.target.id]: e.target.value })\\r\\n\\r\\n    return <Box display='flex' flexDirection='column'>\\r\\n        <TextField id='foo' value={params.foo} label={`Insert value for 'foo'`} onChange={onChange} />\\r\\n        <Typography variant='body2'>{params.foo}</Typography>\\r\\n    </Box>\\r\\n}\\r\\n\\r\\nexport default UseQueryParam\\r\\n\";","export default \"import { Box, TextField, Typography } from '@material-ui/core'\\r\\nimport React from 'react'\\r\\nimport { Route, Switch, useLocation, useRouteMatch } from 'react-router-dom'\\r\\nimport { useParamsAsState } from 'use-route-as-state'\\r\\n\\r\\n\\r\\nconst UseRouteParam = () => {\\r\\n    const [params, updateParams] = useParamsAsState()\\r\\n    const { pathname } = useLocation()\\r\\n\\r\\n    const onChange = (e) => updateParams({ [e.target.id]: e.target.value || undefined })\\r\\n\\r\\n    return <Box display='flex' flexDirection='column'>\\r\\n        <TextField id='bar' value={params.bar} label={`Insert value for 'bar'`} onChange={onChange} />\\r\\n        <Typography variant='body2'>{params.bar}</Typography>\\r\\n    </Box>\\r\\n}\\r\\n\\r\\nexport default () => {\\r\\n    const { path } = useRouteMatch()\\r\\n\\r\\n    return <Switch>\\r\\n        <Route path={`${path}/:bar?`} component={UseRouteParam} />\\r\\n    </Switch>\\r\\n}\\r\\n\";","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}